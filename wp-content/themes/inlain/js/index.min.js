/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./wp-content/themes/inlain/js/dev/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/vnet-dom/DOM/DOM.js":
/*!******************************************!*\
  !*** ./node_modules/vnet-dom/DOM/DOM.js ***!
  \******************************************/
/*! exports provided: dom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dom", function() { return dom; });
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

(function () {
  if (typeof window.CustomEvent === "function") return false;

  function CustomEvent(event, params) {
    params = params || {
      bubbles: false,
      cancelable: false,
      detail: undefined
    };
    var evt = document.createEvent("CustomEvent");
    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
    return evt;
  }

  CustomEvent.prototype = window.Event.prototype;
  window.CustomEvent = CustomEvent;
})();

var DOM = /*#__PURE__*/function () {
  function DOM() {
    _classCallCheck(this, DOM);

    this.document = document;
    this.body = this.document.body;
    this.window = window;
    this.scrollBarWidth = this.getScrollbarWidth();
    this.debug = true;

    this.__initBodyClick();

    this.__initBodyChange();
  }
  /**
   * 
   * @param {*} el 
   * @param {*} container
   * @return always array
   */


  _createClass(DOM, [{
    key: "getDomArray",
    value: function getDomArray(el, container) {
      container = this.getContainer(container);
      if (this.isDom(el)) return [el];
      if (this.isDomArray(el)) return el;

      if (this.isSelector(el)) {
        var res = this.findAll(el, container);
        return res ? res : [];
      }

      return [];
    }
    /**
     * 
     * @param {*} selector 
     * @param {*} container 
     * @return dom element or false;
     */

  }, {
    key: "findFirst",
    value: function findFirst(selector, container) {
      if (!selector || typeof selector !== 'string') return false;
      container = this.getContainer(container);
      return this.__run(function () {
        var obj = container.querySelector(selector);
        return obj;
      });
    }
    /**
     * 
     * @param {*} selector 
     * @param {*} container 
     * @return array of dom elements or false
     */

  }, {
    key: "findAll",
    value: function findAll(selector, container) {
      if (!selector || typeof selector !== 'string') return false;
      container = this.getContainer(container);
      return this.__run(function () {
        var items = container.querySelectorAll(selector);

        if (items && items.length) {
          var res = [];
          var total = items.length;

          for (var i = 0; i < total; i++) {
            res.push(items[i]);
          }

          return res;
        }

        return false;
      });
    }
    /**
     * 
     * @param {*} container
     * return element or body
     */

  }, {
    key: "getContainer",
    value: function getContainer(container) {
      var _this = this;

      if (!container) return this.body;
      return this.__run(function () {
        if (_this.isDom(container)) return container;
        container = _this.findFirst(container);
        return container ? container : _this.body;
      });
    }
    /**
     * 
     * @param {*} str 
     * @param {object} variables
     * @return document fragment or false
     */

  }, {
    key: "strToDom",
    value: function strToDom(str, variables) {
      var _this2 = this;

      if (!str) return false;
      return this.__run(function () {
        if (_typeof(variables) === 'object') {
          Object.keys(variables).forEach(function (varName) {
            return str = str.replace(new RegExp("{{".concat(varName, "}}"), 'gs'), variables[varName]);
          });
        }

        var div = _this2.create('div');

        div.innerHTML = str;

        var fragment = _this2.document.createDocumentFragment();

        var childs = div.childNodes;
        var total = childs.length;

        for (var i = 0; i < total; i++) {
          var node = childs[i];
          fragment.appendChild(node.cloneNode(true));
        }

        return fragment;
      });
    }
    /**
     * 
     * @param {*} el
     * - find all script tags
     * - if has src attribute it will append to head
     * - else wil be exec in eval 
     */

  }, {
    key: "execInlineScripts",
    value: function execInlineScripts(el) {
      var _this3 = this;

      return this.__run(function () {
        _this3.getDomArray(el).forEach(function (item) {
          var scripts = _this3.findAll('script', item);

          if (!scripts) return;
          scripts.forEach(function (script) {
            if (script.hasAttribute('src')) {
              _this3.document.head.appendChild(_this3.create('script', {
                src: script.getAttribute('src')
              }));
            } else {
              eval(script.innerHTML);
            }
          });
        });
      });
    }
    /**
     * 
     * @param {string} tag 
     * @param {string || object} attrs
     * - if attrs is string value wil be used like class
     * @return dom element or false
     */

  }, {
    key: "create",
    value: function create(tag, attrs) {
      var _this4 = this;

      return this.__run(function () {
        var item = _this4.document.createElement(tag);

        if (!attrs) return item;

        if (typeof attrs === 'string') {
          item.setAttribute('class', attrs);
          return item;
        }

        if (_typeof(attrs) === 'object') {
          for (var key in attrs) {
            var attrName = _this4.__getAttrName(key);

            item.setAttribute(attrName, attrs[key]);
          }

          return item;
        }

        return item;
      });
    }
  }, {
    key: "getScrollbarWidth",
    value: function getScrollbarWidth() {
      return this.window.innerWidth - this.document.documentElement.clientWidth;
    }
  }, {
    key: "next",
    value: function next(el) {
      var _this5 = this;

      return this.__run(function () {
        el = _this5.getElement(el);
        var next = el.nextSibling;

        while (next && !_this5.isDom(next)) {
          next = next.nextSibling;
        }

        return _this5.isDom(next) ? next : false;
      });
    }
  }, {
    key: "prev",
    value: function prev(el) {
      var _this6 = this;

      return this.__run(function () {
        el = _this6.getElement(el);
        var prev = el.previousSibling;

        while (prev && !_this6.isDom(prev)) {
          prev = prev.previousSibling;
        }

        return _this6.isDom(prev) ? prev : false;
      });
    }
  }, {
    key: "getElement",
    value: function getElement(el, container) {
      var _this7 = this;

      if (!el) return false;
      return this.__run(function () {
        container = _this7.getContainer(container);
        if (_this7.isDom(el)) return el;
        el = _this7.findFirst(el);
        return el ? el : false;
      });
    }
  }, {
    key: "css",
    value: function css(el) {
      var _this8 = this;

      var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var container = arguments.length > 2 ? arguments[2] : undefined;
      return this.__run(function () {
        _this8.getDomArray(el, container).forEach(function (item) {
          var css = '';

          for (var key in style) {
            css += css ? ' ' : '';
            css += "".concat(_this8.__fromCamelCase(key), ": ").concat(style[key], ";");
          }

          css = css.trim();
          item.setAttribute('style', css);
        });
      });
    }
  }, {
    key: "addCss",
    value: function addCss(el, style, container) {
      var _this9 = this;

      return this.__run(function () {
        _this9.getDomArray(el, container).forEach(function (item) {
          var css = item.getAttribute('style');
          css = css ? css : '';

          for (var key in style) {
            var prop = _this9.__fromCamelCase(key);

            css = css.replace(new RegExp("[s]*".concat(prop, "[^;]*[;]*"), 'g'), '');
            css += css ? '' : ' ';
            css += "".concat(prop, ": ").concat(style[key], ";");
          }

          css = css.trim();
          item.setAttribute('style', css);
        });
      });
    }
  }, {
    key: "hasCss",
    value: function hasCss(el, prop) {
      var _this10 = this;

      el = this.getElement(el);
      if (!el) return false;
      return this.__run(function () {
        return !!el.style[_this10.__fromCamelCase(prop)];
      });
    }
  }, {
    key: "getCss",
    value: function getCss(el, prop) {
      var _this11 = this;

      el = this.getElement(el);
      if (!el) return false;
      return this.__run(function () {
        var res = el.style[_this11.__fromCamelCase(prop)];

        return res ? res : false;
      });
    }
  }, {
    key: "getStyle",
    value: function getStyle(el, prop) {
      var _this12 = this;

      el = this.getElement(el);
      if (!el) return false;
      return this.__run(function () {
        var style = _this12.window.getComputedStyle(el);

        var res = style[prop];
        return res ? res : false;
      });
    }
  }, {
    key: "setAttr",
    value: function setAttr(el) {
      var _this13 = this;

      var attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var container = arguments.length > 2 ? arguments[2] : undefined;
      return this.__run(function () {
        _this13.getDomArray(el, container).forEach(function (item) {
          for (var key in attrs) {
            var attrName = _this13.__getAttrName(key);

            item.setAttribute(attrName, attrs[key]);
          }
        });
      });
    }
  }, {
    key: "dispatch",
    value: function dispatch(el, e) {
      var sets = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var realSets = _objectSpread({
        bubbles: true,
        cancelable: true,
        detail: undefined
      }, sets);

      var ev = new CustomEvent(e, realSets);
      this.getDomArray(el).forEach(function (item) {
        item.dispatchEvent(ev);
      });
    }
  }, {
    key: "jsonStringify",
    value: function jsonStringify(obj) {
      var res = this.__run(function () {
        return JSON.stringify(obj);
      });

      if (!res) {
        console.log(obj);
        return false;
      }

      return res;
    }
  }, {
    key: "jsonParse",
    value: function jsonParse(str) {
      var res = this.__run(function () {
        return JSON.parse(str);
      });

      if (!res) {
        console.log(str);
        return false;
      }

      return res;
    }
  }, {
    key: "ajax",
    value: function ajax(_ref) {
      var _this14 = this;

      var url = _ref.url,
          data = _ref.data,
          preloader = _ref.preloader,
          timeout = _ref.timeout,
          minTimeResponse = _ref.minTimeResponse,
          preloaderHTML = _ref.preloaderHTML;
      timeout = timeout ? timeout : 0;
      minTimeResponse = minTimeResponse ? minTimeResponse : 0;
      var type = data ? "post" : "get";

      var requestData = this.__getRequestData(data);

      if (preloader) {
        this.addPreloader(preloader, preloaderHTML);
      }

      return new Promise(function (resolve, reject) {
        setTimeout(function () {
          var countTime = 0;
          var interval = setInterval(function () {
            countTime++;
          }, 1);
          var http = new XMLHttpRequest();
          http.open(type, url);
          http.send(requestData);

          http.onreadystatechange = function () {
            if (http.readyState === 4 && http.status === 200) {
              if (countTime < minTimeResponse) {
                var lastTime = minTimeResponse - countTime;
                setTimeout(function () {
                  clearInterval(interval);

                  if (preloader) {
                    _this14.removePreloader(preloader);
                  }

                  resolve(http.responseText);
                }, lastTime);
              } else {
                clearInterval(interval);

                if (preloader) {
                  _this14.removePreloader(preloader);
                }

                resolve(http.responseText);
              }
            }
          };
        }, timeout);
      });
    }
  }, {
    key: "addPreloader",
    value: function addPreloader(container, preloaderHTML) {
      if (!preloaderHTML) return;
      container = this.getContainer(container);
      var childs = this.childNodes(container);
      var existPreloader = false;

      if (childs) {
        existPreloader = childs.some(function (item) {
          return item.classList.contains('ajax-preloader');
        });
      }

      if (!existPreloader) {
        existPreloader = preloaderHTML;
        container.appendChild(preloaderHTML);
      }

      dom.addClass(preloaderHTML, 'visible');
    }
  }, {
    key: "childNodes",
    value: function childNodes(container) {
      var childs = container.childNodes;
      var res = [];

      for (var i = 0; i < childs.length; i++) {
        if (!childs[i] || !childs[i].tagName) continue;
        res.push(childs[i]);
      }

      return res.length ? res : false;
    }
  }, {
    key: "removePreloader",
    value: function removePreloader(container) {
      container = this.getContainer(container);
      var preloader = dom.findFirst('.ajax-preloader', container);
      if (!preloader) return;
      this.removeClass(preloader, 'visible');
    }
  }, {
    key: "createRequestDataString",
    value: function createRequestDataString(data) {
      if (!data) return null;
      var str = "";
      Object.keys(data).forEach(function (key, i) {
        var val = data[key];

        if (!i) {
          str += "".concat(key, "=").concat(val);
        } else {
          str += "&".concat(key, "=").concat(val);
        }
      });
      return str;
    }
  }, {
    key: "addClass",
    value: function addClass(el, className, container) {
      var _this15 = this;

      if (!className) return false;
      return this.__run(function () {
        className = className.split(' ').map(function (name) {
          return name.trim();
        });

        _this15.getDomArray(el, container).forEach(function (item) {
          className.forEach(function (newClass) {
            if (item.classList.contains(newClass)) return;
            item.classList.add(newClass);
          });
        });
      });
    }
  }, {
    key: "removeClass",
    value: function removeClass(el, className, container) {
      var _this16 = this;

      if (!className) return false;
      return this.__run(function () {
        className = className.split(' ').map(function (name) {
          return name.trim();
        });

        _this16.getDomArray(el, container).forEach(function (item) {
          className.forEach(function (newClass) {
            if (!item.classList.contains(newClass)) return;
            item.classList.remove(newClass);
          });
        });
      });
    }
  }, {
    key: "getEventPath",
    value: function getEventPath(e) {
      if (e.path && e.path.length) return e.path;
      var res = [];
      var item = e.target;
      res.push(item);

      while (item = item.parentNode) {
        if (_typeof(item) !== 'object' || !item.tagName) continue;
        res.push(item);
        if (item.tagName === 'BODY') break;
      }

      return res;
    }
  }, {
    key: "toggleClass",
    value: function toggleClass(el, className) {
      var _this17 = this;

      if (!className) return false;
      return this.__run(function () {
        className = className.split(' ').map(function (name) {
          return name.trim();
        });

        _this17.getDomArray(el).forEach(function (item) {
          className.forEach(function (newClass) {
            if (!item.classList.contains(newClass)) {
              item.classList.add(newClass);
            } else {
              item.classList.remove(newClass);
            }
          });
        });
      });
    }
  }, {
    key: "isInViewport",
    value: function isInViewport(el) {
      var _this18 = this;

      var margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;
      el = this.getElement(el);
      if (!el) return false;
      margin = this.__getSizeValue(margin);
      return this.__run(function () {
        var scroll = _this18.window.pageYOffset;
        var elTop = el.getBoundingClientRect().top;
        var elHeight = el.offsetHeight;
        var windowHeight = _this18.window.innerHeight;
        var top = elTop + scroll - margin - windowHeight;
        var bottom = elTop + scroll + elHeight + margin;
        return scroll >= top && scroll <= bottom;
      });
    }
  }, {
    key: "on",
    value: function on(event, selector, fn, where) {
      this.getDomArray(selector, where).forEach(function (item) {
        item.addEventListener(event, fn);
      });
    }
  }, {
    key: "onClick",
    value: function onClick(selector, fn, where) {
      this.getDomArray(selector, where).forEach(function (item) {
        item.addEventListener('click', fn);
      });
    }
  }, {
    key: "onChange",
    value: function onChange(selector, fn, where) {
      this.getDomArray(selector, where).forEach(function (item) {
        item.addEventListener('change', fn);
      });
    }
  }, {
    key: "onMouseenter",
    value: function onMouseenter(selector, fn, where) {
      this.getDomArray(selector, where).forEach(function (item) {
        item.addEventListener('mouseenter', fn);
      });
    }
  }, {
    key: "onWindowScroll",
    value: function onWindowScroll(fn) {
      var timer;
      this.window.addEventListener('scroll', function (e) {
        clearTimeout(timer);
        timer = setTimeout(function () {
          fn(e);
        }, 5);
      });
    }
  }, {
    key: "onWindowResize",
    value: function onWindowResize(fn) {
      var timer;
      this.window.addEventListener('resize', function (e) {
        clearTimeout(timer);
        timer = setTimeout(function () {
          fn(e);
        }, 5);
      });
    } //============================================
    //              CONDITIONALS
    //============================================

  }, {
    key: "isDom",
    value: function isDom(el) {
      return el && _typeof(el) === 'object' && el.tagName;
    }
  }, {
    key: "isDomArray",
    value: function isDomArray(elsArr) {
      var _this19 = this;

      return _typeof(elsArr) === 'object' && elsArr.length && elsArr.every(function (el) {
        return _this19.isDom(el);
      });
    }
  }, {
    key: "isSelector",
    value: function isSelector(el) {
      return el && typeof el === 'string';
    }
  }, {
    key: "isYOverflow",
    value: function isYOverflow(el) {
      return el.scrollHeight > el.offsetHeight;
    } //============================================
    //             PRIVATE FUNCTIONS
    //============================================

  }, {
    key: "__run",
    value: function __run(fn) {
      var res = false;

      try {
        res = fn();
      } catch (err) {
        this.__throwError(err);

        return false;
      }

      return res;
    }
  }, {
    key: "__getRequestData",
    value: function __getRequestData(data) {
      if (!data) return false;
      var requestData = false;

      if (_typeof(data) === "object") {
        if (data instanceof FormData) {
          requestData = data;
        } else {
          requestData = new FormData();

          for (var key in data) {
            requestData.append(key, data[key]);
          }
        }
      }

      return requestData;
    }
  }, {
    key: "__getSizeValue",
    value: function __getSizeValue(val) {
      if (!val) return 0;

      if (val.toString().includes('vh')) {
        val = parseFloat(val.replace(/[^\d\-\+\.]+/g, ""));
        val = val * this.window.innerHeight / 100;
        return val;
      }

      if (val.toString().includes('vw')) {
        val = parseFloat(val.replace(/[^\d\.]+/g, ""));
        val = val * this.window.innerWidth / 100;
        return val;
      }

      return parseFloat(val);
    }
  }, {
    key: "__getAttrName",
    value: function __getAttrName(attr) {
      if (!attr) return false;
      if (attr === 'className') return 'class';
      return this.__fromCamelCase(attr);
    }
  }, {
    key: "__fromCamelCase",
    value: function __fromCamelCase(str) {
      if (!str) return false;
      return str.replace(/\.?([A-Z])/g, function (x, y) {
        return "-" + y.toLowerCase();
      }).replace(/^-/, "");
    }
  }, {
    key: "__throwError",
    value: function __throwError(e) {
      this.debug && console.error(e);
    }
  }, {
    key: "__initBodyClick",
    value: function __initBodyClick() {
      this.body.addEventListener('click', this.__parseBodyClick.bind(this));
    }
  }, {
    key: "__initBodyChange",
    value: function __initBodyChange() {
      this.body.addEventListener('change', this.__parseBodyChange.bind(this));
    }
  }, {
    key: "__parseBodyClick",
    value: function __parseBodyClick(e) {
      var _this20 = this;

      var path = this.getEventPath(e);
      if (!path || !path.length) return;
      path.forEach(function (target) {
        if (!target || !target.tagName) return;

        if (target.hasAttribute && target.hasAttribute('data-prevent-default')) {
          e.preventDefault();
        }

        if (target.hasAttribute && target.hasAttribute('data-click-event')) {
          _this20.dispatch(target, target.dataset.clickEvent);
        }

        if (target.hasAttribute && target.hasAttribute('data-toggle-class')) {
          _this20.toggleClass(target, target.dataset.toggleClass);
        }

        if (target.classList && target.classList.contains('material-btn')) {
          _this20.__materialBtn(e, target);
        }
      });
    }
  }, {
    key: "__parseBodyChange",
    value: function __parseBodyChange(e) {
      var _this21 = this;

      var path = this.getEventPath(e);
      if (!path || !path.length) return;
      path.forEach(function (target) {
        if (!target || !target.tagName) return;

        if (target.hasAttribute('data-prevent-default')) {
          e.preventDefault();
        }

        if (target.hasAttribute('data-change-event')) {
          _this21.dispatch(target, target.dataset.changeEvent);
        }
      });
    }
  }, {
    key: "__materialBtn",
    value: function __materialBtn(e, target) {
      var inkEl = this.findFirst('.ink', target);

      if (inkEl) {
        this.removeClass(inkEl, 'animate');
      } else {
        inkEl = this.create('span', 'ink');
        var size = Math.max(target.offsetWidth, target.offsetHeight);
        this.css(inkEl, {
          width: "".concat(size, "px"),
          height: "".concat(size, "px")
        });
        target.appendChild(inkEl);
      }

      this.addCss(inkEl, {
        left: "".concat(e.offsetX - inkEl.offsetWidth / 2, "px"),
        top: "".concat(e.offsetY - inkEl.offsetHeight / 2, "px"),
        opacity: 1
      });
      this.addClass(inkEl, 'animate');
      inkEl.addEventListener('animationend', function (e) {
        if (!inkEl.parentNode) return;
        inkEl.parentNode.removeChild(inkEl);
      });
    }
  }]);

  return DOM;
}();

var dom = new DOM();


/***/ }),

/***/ "./node_modules/vnet-dom/index.js":
/*!****************************************!*\
  !*** ./node_modules/vnet-dom/index.js ***!
  \****************************************/
/*! exports provided: dom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _DOM_DOM__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOM/DOM */ "./node_modules/vnet-dom/DOM/DOM.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dom", function() { return _DOM_DOM__WEBPACK_IMPORTED_MODULE_0__["dom"]; });



/***/ }),

/***/ "./wp-content/themes/inlain/css/dev/index.scss":
/*!*****************************************************!*\
  !*** ./wp-content/themes/inlain/css/dev/index.scss ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),

/***/ "./wp-content/themes/inlain/js/dev/accordion.js":
/*!******************************************************!*\
  !*** ./wp-content/themes/inlain/js/dev/accordion.js ***!
  \******************************************************/
/*! exports provided: accordion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accordion", function() { return accordion; });
/* harmony import */ var vnet_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vnet-dom */ "./node_modules/vnet-dom/index.js");

var accordion = function accordion(container) {
  var items = vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].findAll('.js-accordion', container);
  if (!items) return;
  items.forEach(function (item) {
    initAccordion(item);
  });
};

var initAccordion = function initAccordion(accordion) {
  var items = vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].findAll('.accordion-item', accordion);
  if (!items) return;
  var bodies = vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].findAll('.accordion-body', accordion);
  if (!bodies) return;
  items.forEach(function (item) {
    vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].onClick('.accordion-head', function (e) {
      if (item.classList.contains('active')) return;
      var body = vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].findFirst('.accordion-body', item);
      hideBodies(bodies, body);
      showBody(body);
      vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].removeClass(items, 'active');
      vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].addClass(item, 'active');
    }, item);
  });
};

var hideBodies = function hideBodies(bodies, body) {
  bodies.forEach(function (current) {
    if (current === body) return;
    $(current).slideUp({
      duration: 200
    });
  });
};

var showBody = function showBody(body) {
  $(body).slideDown({
    duration: 200
  });
};

/***/ }),

/***/ "./wp-content/themes/inlain/js/dev/forms/focusParent.js":
/*!**************************************************************!*\
  !*** ./wp-content/themes/inlain/js/dev/forms/focusParent.js ***!
  \**************************************************************/
/*! exports provided: focusParent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "focusParent", function() { return focusParent; });
/* harmony import */ var vnet_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vnet-dom */ "./node_modules/vnet-dom/index.js");

var focusParent = function focusParent(container) {
  vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].on('focus', '.input', function (e) {
    var input = e.currentTarget;
    var parent = input.parentNode;

    if (parent && parent.tagName) {
      vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].addClass(parent, 'has-focus');
    }
  }, container);
  vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].on('blur', '.input', function (e) {
    var input = e.currentTarget;
    var parent = input.parentNode;

    if (parent && parent.tagName) {
      vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].removeClass(parent, 'has-focus');
    }
  }, container);
};

/***/ }),

/***/ "./wp-content/themes/inlain/js/dev/forms/index.js":
/*!********************************************************!*\
  !*** ./wp-content/themes/inlain/js/dev/forms/index.js ***!
  \********************************************************/
/*! exports provided: dynamicFormFunctions, staticFormFunctions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dynamicFormFunctions", function() { return dynamicFormFunctions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticFormFunctions", function() { return staticFormFunctions; });
/* harmony import */ var vnet_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vnet-dom */ "./node_modules/vnet-dom/index.js");
/* harmony import */ var _focusParent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./focusParent */ "./wp-content/themes/inlain/js/dev/forms/focusParent.js");
/* harmony import */ var _typePhone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./typePhone */ "./wp-content/themes/inlain/js/dev/forms/typePhone.js");



var dynamicFormFunctions = function dynamicFormFunctions(container) {
  Object(_focusParent__WEBPACK_IMPORTED_MODULE_1__["focusParent"])(container);
  Object(_typePhone__WEBPACK_IMPORTED_MODULE_2__["typePhone"])(container);
};
var staticFormFunctions = function staticFormFunctions() {};

/***/ }),

/***/ "./wp-content/themes/inlain/js/dev/forms/typePhone.js":
/*!************************************************************!*\
  !*** ./wp-content/themes/inlain/js/dev/forms/typePhone.js ***!
  \************************************************************/
/*! exports provided: typePhone */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "typePhone", function() { return typePhone; });
/* harmony import */ var vnet_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vnet-dom */ "./node_modules/vnet-dom/index.js");

var typePhone = function typePhone(container) {
  return;
  var inputs = vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].findAll('.custom-phone', container);
  if (!inputs) return;
  inputs.forEach(function (input) {
    return initCustomPhone(input);
  });
};

var initCustomPhone = function initCustomPhone(input) {
  var iti = vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].window.intlTelInput(input, {
    initialCountry: 'ru',
    autoPlaceholder: 'aggressive',
    nationalMode: false,
    preferredCountries: ['ru', 'by'],
    customPlaceholder: function customPlaceholder(placeholder, data) {
      var iso = data.iso2;

      if (iso === 'ru') {
        return '+7';
      }

      if (iso === 'by') {
        return '+375';
      }

      return placeholder;
    },
    utilsScript: "".concat(back_dates.SRC, "js/telUtils.js")
  });
  input.addEventListener('focus', function (e) {
    if (input.value) return;
    var data = iti.getSelectedCountryData();
    iti.setNumber("+".concat(data.dialCode));
  });
  input.addEventListener("countrychange", function (e) {
    var data = iti.getSelectedCountryData();
    iti.setNumber("+".concat(data.dialCode));
  });
};

/***/ }),

/***/ "./wp-content/themes/inlain/js/dev/index.js":
/*!**************************************************!*\
  !*** ./wp-content/themes/inlain/js/dev/index.js ***!
  \**************************************************/
/*! exports provided: dynamicFunctions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dynamicFunctions", function() { return dynamicFunctions; });
/* harmony import */ var _css_dev_index_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css/dev/index.scss */ "./wp-content/themes/inlain/css/dev/index.scss");
/* harmony import */ var _css_dev_index_scss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_dev_index_scss__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vnet_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vnet-dom */ "./node_modules/vnet-dom/index.js");
/* harmony import */ var _youtubeVideo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./youtubeVideo */ "./wp-content/themes/inlain/js/dev/youtubeVideo.js");
/* harmony import */ var _forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./forms */ "./wp-content/themes/inlain/js/dev/forms/index.js");
/* harmony import */ var _accordion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./accordion */ "./wp-content/themes/inlain/js/dev/accordion.js");

 // CUSTOM SCRIPTS





var dynamicFunctions = function dynamicFunctions(wrap) {
  var container = vnet_dom__WEBPACK_IMPORTED_MODULE_1__["dom"].getContainer(wrap);
  if (!container) return;
  Object(_youtubeVideo__WEBPACK_IMPORTED_MODULE_2__["youtubeVideo"])(container);
  Object(_forms__WEBPACK_IMPORTED_MODULE_3__["dynamicFormFunctions"])(container);
  Object(_accordion__WEBPACK_IMPORTED_MODULE_4__["accordion"])(container);
};

var staticFunctions = function staticFunctions() {
  Object(_forms__WEBPACK_IMPORTED_MODULE_3__["staticFormFunctions"])();
};

dynamicFunctions();
staticFunctions();

/***/ }),

/***/ "./wp-content/themes/inlain/js/dev/youtubeVideo.js":
/*!*********************************************************!*\
  !*** ./wp-content/themes/inlain/js/dev/youtubeVideo.js ***!
  \*********************************************************/
/*! exports provided: youtubeVideo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "youtubeVideo", function() { return youtubeVideo; });
/* harmony import */ var vnet_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vnet-dom */ "./node_modules/vnet-dom/index.js");

var YOUTUBE_API = 'https://www.youtube.com/iframe_api';
var youtubeVideo = function youtubeVideo(container) {
  loadYoutubeApi().then(function () {
    vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].onClick('.js-video-play', function (e) {
      var target = e.currentTarget;
      initPlayer(target);
    }, container);
  });
};

var loadYoutubeApi = function loadYoutubeApi() {
  return new Promise(function (resolve, reject) {
    if (vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].body.classList.contains('youtube-is-loaded')) {
      resolve();
      return;
    }

    var script = vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].create('script', {
      src: YOUTUBE_API
    });
    vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].document.head.appendChild(script);

    vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].window.onYouTubeIframeAPIReady = function () {
      if (vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].body.classList.contains('youtube-is-loaded')) return;
      vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].addClass(vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].body, 'youtube-is-loaded');
      resolve();
    };
  });
};

var initPlayer = function initPlayer(target) {
  if (target.classList.contains('loading')) return;
  var id = target.dataset.id;
  var playerId = target.dataset.playerId;
  if (!id || !playerId) return;
  vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].addClass(target, 'loading');
  var player = new YT.Player(playerId, {
    height: '390',
    width: '640',
    videoId: id,
    events: {
      onReady: function onReady() {
        player.playVideo();
        vnet_dom__WEBPACK_IMPORTED_MODULE_0__["dom"].addClass(target, 'loaded');
      }
    }
  });
};

/***/ })

/******/ });
//# sourceMappingURL=index.min.js.map